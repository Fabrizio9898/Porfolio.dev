---
import SunIcon from "../icons/Sun.astro"
import MoonIcon from "../icons/Moon.astro"
import SystemIcon from "../icons/System.astro"

const THEMES = ["Light", "Dark"]
---

<div class="relative ml-1 mr-1">
  <button
  transition:persist
  id="theme-toggle-btn"
  class="appearance-none border-none flex hover:scale-125 transition relative"
>
  <span class="sr-only">Toggle theme</span>
  <SunIcon id="light" class="theme-toggle-icon size-5 transition-all" />
  <MoonIcon
    id="dark"
    class="theme-toggle-icon absolute size-5 transition-all"
  />
</button>
</div>

<style>
  .theme-toggle-icon {
    transition: all 0.15s ease;
  }
</style>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined") {
      return localStorage.getItem("theme") ?? "light"
    }
    return "light"
  }

  const updateIcon = (isDark) => {
    document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
      element.style.scale = element.id === (isDark ? "dark" : "light") ? "1" : "0"
    })
  }

  const updateTheme = () => {
    const isDark = getThemePreference() === "dark"
    updateIcon(isDark)
    document.documentElement.classList[isDark ? "add" : "remove"]("dark")
  }

  // Initial theme setup
  updateTheme()

  // Toggle theme on button click
  document.getElementById("theme-toggle-btn").addEventListener("click", () => {
    const newTheme = getThemePreference() === "light" ? "dark" : "light"
    localStorage.setItem("theme", newTheme)
    updateTheme()
  })

  // Handle view transitions
  document.addEventListener('astro:after-swap', () => {
    updateTheme()
    window.scrollTo({ left: 0, top: 0, behavior: 'instant' })
  })
</script>

